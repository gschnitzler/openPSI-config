--- config/Bootstrap/Templates/mkfs.sh
+++ config/Bootstrap/Templates/mkfs.sh
@@ -12,40 +12,41 @@
 
 echo "partition disk1: "
 # use gpt and Mib
-parted -a optimal [% machine.self.RAID.DISK1 %] mklabel gpt > /dev/null
-parted -a optimal [% machine.self.RAID.DISK1 %] unit mib > /dev/null
+parted -s -a optimal [% machine.self.RAID.DISK1 %] mklabel gpt > /dev/null
+parted -s -a optimal [% machine.self.RAID.DISK1 %] unit mib > /dev/null
 # bios boot partition
-parted -a optimal [% machine.self.RAID.DISK1 %] mkpart primary 1 3  > /dev/null
-parted -a optimal [% machine.self.RAID.DISK1 %] name 1 grub > /dev/null
-parted -a optimal [% machine.self.RAID.DISK1 %] set 1 bios_grub on > /dev/null
+parted -s -a optimal [% machine.self.RAID.DISK1 %] mkpart primary 1 3  > /dev/null
+parted -s -a optimal [% machine.self.RAID.DISK1 %] name 1 grub > /dev/null
+parted -s -a optimal [% machine.self.RAID.DISK1 %] set 1 bios_grub on > /dev/null
 # efi boot partition for later use
-parted -a optimal [% machine.self.RAID.DISK1 %] mkpart primary 3 131 > /dev/null
-parted -a optimal [% machine.self.RAID.DISK1 %] name 2 boot > /dev/null
-parted -a optimal [% machine.self.RAID.DISK1 %] set 2 boot on > /dev/null
+parted -s -a optimal [% machine.self.RAID.DISK1 %] mkpart primary 3 131 > /dev/null
+parted -s -a optimal [% machine.self.RAID.DISK1 %] name 2 boot > /dev/null
+parted -s -a optimal [% machine.self.RAID.DISK1 %] set 2 boot on > /dev/null
 # system
-parted -a optimal [% machine.self.RAID.DISK1 %] mkpart primary 131 100% > /dev/null
-parted -a optimal [% machine.self.RAID.DISK1 %] name 3 rootfs > /dev/null
+parted -s -a optimal [% machine.self.RAID.DISK1 %] mkpart primary 131 100% > /dev/null
+parted -s -a optimal [% machine.self.RAID.DISK1 %] name 3 rootfs > /dev/null
 
 [% IF machine.self.RAID.LEVEL != 'raidS' %]
 # only do that in raidmodes
 echo "partition disk2: "
 # use gpt and Mib
-parted -a optimal [% machine.self.RAID.DISK2 %] mklabel gpt > /dev/null
-parted -a optimal [% machine.self.RAID.DISK2 %] unit mib > /dev/null
+parted -s -a optimal [% machine.self.RAID.DISK2 %] mklabel gpt > /dev/null
+parted -s -a optimal [% machine.self.RAID.DISK2 %] unit mib > /dev/null
 # bios boot partition
-parted -a optimal [% machine.self.RAID.DISK2 %] mkpart primary 1 3  > /dev/null
-parted -a optimal [% machine.self.RAID.DISK2 %] name 1 grub > /dev/null
-parted -a optimal [% machine.self.RAID.DISK2 %] set 1 bios_grub on > /dev/null
+parted -s -a optimal [% machine.self.RAID.DISK2 %] mkpart primary 1 3  > /dev/null
+parted -s -a optimal [% machine.self.RAID.DISK2 %] name 1 grub > /dev/null
+parted -s -a optimal [% machine.self.RAID.DISK2 %] set 1 bios_grub on > /dev/null
 # efi boot partition for later use
-parted -a optimal [% machine.self.RAID.DISK2 %] mkpart primary 3 131 > /dev/null
-parted -a optimal [% machine.self.RAID.DISK2 %] name 2 boot > /dev/null
-parted -a optimal [% machine.self.RAID.DISK2 %] set 2 boot on > /dev/null
+parted -s -a optimal [% machine.self.RAID.DISK2 %] mkpart primary 3 131 > /dev/null
+parted -s -a optimal [% machine.self.RAID.DISK2 %] name 2 boot > /dev/null
+parted -s -a optimal [% machine.self.RAID.DISK2 %] set 2 boot on > /dev/null
 # system
-parted -a optimal [% machine.self.RAID.DISK2 %] mkpart primary 131 100% > /dev/null
-parted -a optimal [% machine.self.RAID.DISK2 %] name 3 rootfs > /dev/null
+parted -s -a optimal [% machine.self.RAID.DISK2 %] mkpart primary 131 100% > /dev/null
+parted -s -a optimal [% machine.self.RAID.DISK2 %] name 3 rootfs > /dev/null
 [% END %]
 
 echo "creating filesystems: "
+mkdir -p [% paths.hostos.MOUNT %]
 mkfs.btrfs -f -L disk1 [% machine.self.RAID.DISK1 %][% 'p' IF machine.self.RAID.DISK1.match('nvme') %]3 > /dev/null
 mount  [% machine.self.RAID.DISK1 %][% 'p' IF machine.self.RAID.DISK1.match('nvme') %]3 [% paths.hostos.MOUNT %]
 
@@ -55,7 +56,11 @@ btrfs device add -f [% machine.self.RAID.DISK2 %][% 'p' IF machine.self.RAID.DIS
 btrfs balance start -f -dconvert=[% machine.self.RAID.LEVEL %] -mconvert=[% machine.self.RAID.LEVEL %] [% paths.hostos.MOUNT %]
 [% END %]
 
-btrfs subvolume create [% paths.hostos.MOUNT %]/boot
+#btrfs subvolume create [% paths.hostos.MOUNT %]/boot
+mkfs.vfat [% machine.self.RAID.DISK1 %][% 'p' IF machine.self.RAID.DISK1.match('nvme') %]2
+[% IF machine.self.RAID.LEVEL != 'raidS' %]
+mkfs.vfat [% machine.self.RAID.DISK2 %][% 'p' IF machine.self.RAID.DISK2.match('nvme') %]2
+[% END %]
 btrfs subvolume create [% paths.hostos.MOUNT %]/system1
 btrfs subvolume create [% paths.hostos.MOUNT %]/system2
 btrfs subvolume create [% paths.hostos.MOUNT %]/data
