#!/bin/bash

#echo "initializing btrfs raid"

# btrfs will die with a strange error if a filesystem is mounted in, so we have to unmount genesis and remount it afterwards
# this also does not work. it has to be unmounted outside of the chroot, because it is remapped with /data before
# no time to find a solution now
#umount -f [% paths.psi.GENESIS %]
#sleep 5


#mount [% paths.data.ROOT %]/genesis.img [% paths.psi.GENESIS %]

echo "installing grub in mbr"

# this error:
#grub-install: warning: your core.img is unusually large.  It won't fit in the embedding area.
#grub-install: error: filesystem `btrfs' doesn't support blocklists.
# so. old hetzners servers dont use efi. (newer ones can do both)
# and we don't use partitions either. (as they were a pain in the ass to script many years ago, and who needed them anyway;) 
# so we resort to mbr installations of grub+partitionless btrfs. with grub 2.04, they added support for zstd in btrfs
# now with zstd the core.img of grub does not fit into the empty sectors (64kb) in the beginning of the disk.
# and btrfs does not support blocklists. and grubs --compress-core is broken.
# and its a complete shitshow. anyway. in the long run, once efi and thus efi partitions and thus gpt partitions are used,
# this is a nonissue. meanwhile, we don't need any fs compression, and probably never will.
# so, digging around aimlessly for way too many hours (fuck grub, again), i found a way to remove zstd from core.img
#sed -i 's/^\(btrfs:.*\)zstd\(.*\)/\1 \2/' /usr/lib/grub/i386-pc/moddep.lst
# still, grub wouldn't boot. at least not on the buildhost. it complained that 'variable 'prefix' isn't set' and locked up.
# it did boot fine on virtualbox though. 2 days of debugging down the rabbit hole didn't help, and i stopped caring 2 hours into the grub source.
# so for now we lock to version 2.02 which is still in tree upstream.
# mid term, we would need to reintroduce partitions and EFI. which requires rebuilding all servers
grub-install [% machine.self.RAID.DISK1 %]

[% IF machine.self.RAID.LEVEL != 'raidS' %]
grub-install [% machine.self.RAID.DISK2 %]
[% END %]
