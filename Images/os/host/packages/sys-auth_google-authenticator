#@description
used for 2FA

#@flags
enabled=1

#@package
media-gfx/qrencode
sys-auth/google-authenticator

#@pre

# we need an overlay.
#emerge layman
#layman -f -a sunrise
#echo "source /var/lib/layman/make.conf" >> /etc/portage/make.conf
echo "sys-auth/google-authenticator ~amd64" >> /etc/portage/package.accept_keywords/googleauth
echo "media-gfx/qrencode png" >> /etc/portage/package.use/gauth

#@post

cat > /etc/pam.d/sshd << "EOF"
# nullok, together with the semicolon and ':pam' notation in sshd_config AuthMethods, allows users without 2 factor auth enabled to login (as used for mro accounts)
# with google auth 1.04, they changed the behaviour of nullok (now returning PAM_IGNORE instead of PAM_SUCCESS). reason: security issues
# now, the maintainer from google does not seem to fully understand how PAM works (and who really does?).
# so, the 'sufficient' in the below line
#auth 	   sufficient	pam_google_authenticator.so nullok
# has to be redefined as follows:
auth       [ success=done new_authtok_reqd=done ignore=ignore default=die ]     pam_google_authenticator.so nullok
# so that by adding the following line:
auth required pam_permit.so
# publickey only users can login, as well as users with 2factor. otherwise, either the key only user will fail to login, or the 2FA user could enter any string to login.
# for reference, see:
# https://github.com/google/google-authenticator-libpam/issues/55
# https://github.com/google/google-authenticator-libpam/issues/75
# watch out for future releases, as this will surely trigger more bug reports and changed behavior down the line.
# its kind of disapointing to see a google dev of a security only tool to trip over his own workarounds.
# well

# commenting this disables password prompt on failure
#auth       include	system-remote-login
account    include	system-remote-login
password   include	system-remote-login
session	   include	system-remote-login

EOF
chmod 644 /etc/pam.d/sshd
