settings {
        logident        = "lsyncd",
        logfacility     = "user",
--        logfile         = "/var/log/lsyncd.log", now handled via syslog
        pidfile         = "/run/lsyncd.pid",
        statusFile      = "/var/log/lsyncd_status.log",
--        statusInterval  = 1
--        maxProcesses    = 1
}

initSync = {
        delay = 5,
        maxProcesses = 1,
        action = function(inlet)
                local elist = inlet.getEvents()
                local config = inlet.getConfig()
                local paths = elist.getPaths()
                log("Normal", "Processing sync list:\n", paths)
                spawn(elist, "/usr/sbin/csync2", "-x","-N[% machine.self.NAMES.SHORT %]")
        end,
        collect = function(agent, exitcode)
                local config = agent.config
                if not agent.isList and agent.etype == "Init" then
                        if exitcode == 0 then
                                log("Normal", "Startup of '", agent.source, "' instance finished.")
                        elseif config.exitcodes and config.exitcodes[exitcode] == "again" then
                                log("Normal", "Retrying startup of '", agent.source, "' instance.")
                                return "again"
                        else
                                log("Error", "Failure on startup of '", agent.source, "' instance.")
                                terminate(-1)
                        end
                        return
                end
                local rc = config.exitcodes and config.exitcodes[exitcode]
                if rc == "die" then
                        return rc
                end
                if agent.isList then
                        if rc == "again" then
                                log("Normal", "Retrying events list on exitcode = ", exitcode)
                        else
                                log("Normal", "Finished events list = ", exitcode)
                        end
                else
                        if rc == "again" then
                                log("Normal", "Retrying ", agent.etype, " on ", agent.sourcePath, " = ", exitcode)
                        else
                                log("Normal", "Finished ", agent.etype, " on ", agent.sourcePath, " = ", exitcode)
                        end
                end
                return rc
        end,
        init = function(event)
                local inlet = event.inlet
                local config = inlet.getConfig()
--                local event = inlet.createBlanketEvent()
                log("Normal", "Recursive startup sync: ", config.source)
                spawn(event, "/usr/sbin/csync2", "-x", "-N[% machine.self.NAMES.SHORT %]")
        end,
--        prepare = function(config)
--                if not config.syncid then
--                        error("Missing 'syncid' parameter.", 4)
--                end
--                local c = "csync2_" .. config.syncid .. ".cfg"
--                local f, err = io.open("/etc/csync2/" .. c, "r")
--                if not f then
--                        error("Invalid 'syncid' parameter: " .. err, 4)
--                end
--                f:close()
--        end
}
local sources = {


