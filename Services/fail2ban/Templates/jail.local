[INCLUDES]
before = paths-debian.local

[DEFAULT]
bantime.increment = true
ignoreself = true
# well, listing all internal networks explicitly (containers, cluster nodes, ipsec/wireguard, network zones, vlans and whatnot) with selective 'bad'
# ranges misses the point. it being the reduction of log noise, not 'security'. Banning internal IPs just leads to hard to diagnose problems down the line.
# To selectively allow stuff and identify bad actors, use iptables, monitoring (with an optional IDS) 
ignoreip = 127.0.0.1/8 ::1 10.0.0.0/8 192.168.0.0/16 172.16.0.0/12 
bantime  = 60m
findtime  = 60m
maxretry = 3
backend = pyinotify
usedns = yes
logencoding = auto
destemail = [% machine.self.COMPONENTS.SERVICE.fail2ban.DESTEMAIL %]
sender = [% machine.self.COMPONENTS.SERVICE.fail2ban.SENDER %]
chain = f2b
banaction = iptables-multiport
banaction_allports = iptables-allports
action = %(action_)s

[iptables]
enabled = true
filter = iptables
logpath = /var/log/kern.log
            /etc/fail2ban/empty.log

[strongswan_ikev2]
enabled = true
port = 500,4500
protocol = udp
filter = strongswan_ikev2
logpath = %(syslog_daemon)s
            /etc/fail2ban/empty.log

[sshd]
enabled = true
mode   = normal
port    = ssh,1022,1222
logpath = %(sshd_log)s
            /etc/fail2ban/empty.log
backend = %(sshd_backend)s

[apache-auth]
enabled = true
port     = http,https
logpath  = %(apache_error_log)s
            /etc/fail2ban/empty.log

[apache-badbots]
enabled = true
port     = http,https
logpath  = %(apache_access_log)s
            /etc/fail2ban/empty.log
bantime  = 48h
maxretry = 1

[apache-noscript]
enabled = true
port     = http,https
logpath  = %(apache_error_log)s
            /etc/fail2ban/empty.log

[apache-overflows]
enabled = true
port     = http,https
logpath  = %(apache_error_log)s
            /etc/fail2ban/empty.log
maxretry = 2

[apache-nohome]
enabled = true
port     = http,https
logpath  = %(apache_error_log)s
            /etc/fail2ban/empty.log
maxretry = 2

[apache-botsearch]
enabled = true
port     = http,https
logpath  = %(apache_error_log)s
            /etc/fail2ban/empty.log
maxretry = 2

[apache-modsecurity]
enabled = true
port     = http,https
logpath  = %(apache_error_log)s
            /etc/fail2ban/empty.log
maxretry = 2

[apache-shellshock]
enabled = true
port    = http,https
logpath = %(apache_error_log)s
            /etc/fail2ban/empty.log
maxretry = 1

[php-url-fopen]
enabled = true
port    = http,https
logpath = %(nginx_access_log)s
          %(apache_access_log)s
            /etc/fail2ban/empty.log

[roundcube-auth]
enabled = true
port     = http,https
logpath  = %(roundcube_errors_log)s
            /etc/fail2ban/empty.log

[postfix]
enabled = true
# To use another modes set filter parameter "mode" in jail.local:
mode    = more
port    = smtp,465,submission
logpath = %(postfix_log)s
            /etc/fail2ban/empty.log

[postfix-rbl]
enabled = true
filter   = postfix[mode=rbl]
port     = smtp,465,submission
logpath  = %(postfix_log)s
            /etc/fail2ban/empty.log
maxretry = 1

[dovecot]
enabled = true
port    = pop3,pop3s,imap,imaps,submission,465,sieve
logpath = %(dovecot_log)s
            /etc/fail2ban/empty.log

[sieve]
enabled = true
port   = smtp,465,submission
logpath = %(dovecot_log)s
            /etc/fail2ban/empty.log

[postfix-sasl]
enabled = true
filter   = postfix[mode=auth]
port     = smtp,465,submission,imap,imaps,pop3,pop3s
logpath  = %(postfix_log)s
            /etc/fail2ban/empty.log
backend  = %(postfix_backend)s

[pam-generic]
enable = true
# pam-generic filter can be customized to monitor specific subset of 'tty's
banaction = %(banaction_allports)s
logpath  = %(syslog_authpriv)s
            /etc/fail2ban/empty.log
backend  = %(syslog_backend)s

[grafana]
enabled = true
port    = http,https
logpath = /var/log/syslog
            /etc/fail2ban/empty.log

