# /etc/mysql/my.cnf: The global mysql configuration file.

# The following options will be passed to all MySQL clients
[client]
#password					= your_password
port						= 3306
socket						= /var/run/mysqld/mysqld.sock

[mysql]
character-sets-dir=/usr/share/mariadb/charsets
default-character-set=utf8

[mysqladmin]
character-sets-dir=/usr/share/mariadb/charsets
default-character-set=utf8

[mysqlcheck]
character-sets-dir=/usr/share/mariadb/charsets
default-character-set=utf8

[mysqldump]
character-sets-dir=/usr/share/mariadb/charsets
default-character-set=utf8

[mysqlimport]
character-sets-dir=/usr/share/mariadb/charsets
default-character-set=utf8

[mysqlshow]
character-sets-dir=/usr/share/mariadb/charsets
default-character-set=utf8

[myisamchk]
character-sets-dir=/usr/share/mariadb/charsets

[myisampack]
character-sets-dir=/usr/share/mariadb/charsets

# use [safe_mysqld] with mysql-3
[mysqld_safe]
# we dont use mysqld_safe
#err-log						= [% container.config.CONTAINER.PATHS.PERSISTENT %]/mysql.err

# add a section [mysqld-4.1] or [mysqld-5.0] for specific configurations
[mysqld]
character-set-server		= utf8
user 						= mysql
port 						= 3306
socket 						= /var/run/mysqld/mysqld.sock
pid-file 					= /var/run/mysqld/mysqld.pid
# not defining log-error enables logging to STDERR, which is collected by supervisord, and logged to syslog.
# this affects not only mysqld.err, but also db/mariadb_node.err, which is what we actually want (thats where the wsrep status gets logged)
#log-error 					= [% container.config.CONTAINER.PATHS.PERSISTENT %]/mysqld.err
basedir 					= /usr
datadir 					= [% container.config.CONTAINER.PATHS.PERSISTENT %]/db
skip-external-locking
key_buffer_size				= 16M
# changed this from 1M to 10M. the app db has branding images, and to load them from a dump, this is required
max_allowed_packet 			= 10M
table_open_cache 			= 64
sort_buffer_size 			= 512K
net_buffer_length 			= 8K
read_buffer_size 			= 256K
read_rnd_buffer_size 		= 512K
myisam_sort_buffer_size 	= 8M
lc_messages_dir			= /usr/share/mariadb
#Set this to your desired error message language
lc_messages			= en_US

# requested by TOM
max_connections        = 500

log-bin
server-id 					= 1

# point the following paths to different dedicated disks
### dont use /tmp, as it might not have suficient space for sst transfers. use pdata instead
tmpdir 						= [% container.config.CONTAINER.PATHS.PERSISTENT %]/tmp/
#log-update 				= /path-to-dedicated-directory/hostname

# you need the debug USE flag enabled to use the following directives,
# if needed, uncomment them, start the server and issue 
# #tail -f /tmp/mysqld.sql /tmp/mysqld.trace
# this will show you *exactly* what's happening in your server ;)

#log						= /tmp/mysqld.sql
#gdb
#debug						= d:t:i:o,/tmp/mysqld.trace
#one-thread

# the following is the InnoDB configuration
# if you wish to disable innodb instead
# uncomment just the next line
#skip-innodb
#
# the rest of the innodb config follows:
# don't eat too much memory, we're trying to be safe on 64Mb boxes
# you might want to bump this up a bit on boxes with more RAM

#### use halve our total RAM / or.. use 1/4 so that the VMs don't go OOM
innodb_buffer_pool_size = 4G
# this is the default, increase it if you have lots of tables

#### will be deprecated
#innodb_additional_mem_pool_size = 2M
#
# i'd like to use /var/lib/mysql/innodb, but that is seen as a database :-(
# and upstream wants things to be under /var/lib/mysql/, so that's the route
# we have to take for the moment
#innodb_data_home_dir		= /var/lib/mysql/
#innodb_log_arch_dir		= /var/lib/mysql/
#innodb_log_group_home_dir	= /var/lib/mysql/
# you may wish to change this size to be more suitable for your system
# the max is there to avoid run-away growth on your machine
innodb_data_file_path = ibdata1:10M:autoextend:max:128M
# we keep this at around 25% of of innodb_buffer_pool_size
# sensible values range from 1MB to (1/innodb_log_files_in_group*innodb_buffer_pool_size)
### and we need more.. galera failes syncing otherwise
innodb_log_file_size = 2G
# this is the default, increase it if you have very large transactions going on
innodb_log_buffer_size = 8M
# this is the default and won't hurt you
# you shouldn't need to tweak it
innodb_log_files_in_group=2
# see the innodb config docs, the other options are not always safe
innodb_flush_log_at_trx_commit = 1
innodb_lock_wait_timeout = 50

# Uncomment this to get FEDERATED engine support
#plugin-load=federated=ha_federated.so
### gives unknown option '--loose-federated'
#loose-federated

# These settings are required for Galera clustering
#mysql settings
binlog_format=ROW
default-storage-engine=innodb
innodb_autoinc_lock_mode=2
query_cache_size=0
query_cache_type=0
bind-address=0.0.0.0

[% IF container.config.OPTIONS.GALERA == 'yes' %]

# Uncomment this section to activate Galera clustering
wsrep_on=ON
wsrep_provider=/usr/lib64/galera/libgalera_smm.so
# You should change this name to something meaningful
wsrep_cluster_name="[% container.config.NAME %]"
# List all nodes of the cluster including this one
wsrep_cluster_address="gcomm://[% container.config.OPTIONS.NODES %]"
wsrep_sst_method=mariabackup
wsrep_node_address="[% container.config.OPTIONS.SELF %]"
wsrep_node_name="[% machine.self.NAMES.SHORT %]"
wsrep_sst_auth=mariabackup:[% container.config.OPTIONS.MARIABACKUP_PW %]


[% END %]

[mysqldump]
quick
max_allowed_packet 			= 16M

[mysql]
# uncomment the next directive if you are not familiar with SQL
#safe-updates

[isamchk]
key_buffer_size				= 20M
sort_buffer_size 			= 20M
read_buffer 				= 2M
write_buffer 				= 2M

[myisamchk]
key_buffer_size				= 20M
sort_buffer_size 			= 20M
read_buffer_size			= 2M
write_buffer_size			= 2M

[mysqlhotcopy]
interactive-timeout
